{
  "id": "",
  "guid": "",
  "name": "Azure RI Report",
  "type": "COMMAND",
  "change_description": null,
  "fulfillment_rule": "NONE",
  "add_owner_as_admin": false,
  "auto_deploy": false,
  "users": [],
  "organizations": [],
  "target_type": "MANAGEMENTSERVER",
  "info_messages": [],
  "prompt_message": null,
  "system_version": "9.0.0 (1007160153)",
  "steps": [
    {
      "name": "Run Azure RI Report",
      "type": "EMBEDDED_SCRIPT",
      "condition": "#{target.cloudAccount.type} -eq \"ms_arm\"",
      "data": {
        "credentials": null,
        "failure_action": "FAIL_STEP",
        "script_contents": "$subscriptionId = (Get-Item Env:AZURE_SUBSCRIPTION_ID).value \n$tenantId = (Get-Item Env:AZURE_TENANT_ID).value \n$apiKey = (Get-Item Env:AZURE_API_KEY).value \n$ApplicationId = (Get-Item Env:AZURE_APPLICATION_ID).value \n$Account =  \"#{target.cloudAccount.address}\"  \n$AccountName = \"#{target.cloudAccount.name}\" \n$Module = \"AZ\"  \n \n \n# Check validation  \nif(!($subscriptionId) -or !($tenantId) -or !($apiKey) -or !($ApplicationId)-or !($Module) -or !($AccountName)){ \n        Write-error \"Please provide Azure Login information\" \n        #Exit 1 \n        } \n        \n#Report Details \n$SanitzedAccount = \"XXXXXX\"+$subscriptionId.Substring(28) \n$Path = \"C:\\progra~1\\Embotics\\vCommander\\tomcat\\reports\\data\\\" \n$FileName = ($AccountName -replace \" \",\"_\")+\"-RI-\"+$SanitzedAccount+\".html\" \n$reportpath = $path+$FileName \n$CreationDate = get-date -Format f  \n        \n        \n \n#Remove white space for older versions of powershell \n$subscriptionId = $subscriptionId -replace \"\\s\", \"\" \n$tenantId = $tenantId -replace \"\\s\", \"\" \n$apiKey = $apiKey -replace \"\\s\", \"\" \n$ApplicationId = $ApplicationId -replace \"\\s\", \"\" \n \n#Check for Module \nif (Get-Module -ListAvailable -Name \"$Module.*\") { \n    Import-Module $Module \n    Write-Debug \"Module $Module is installed.\" \n    }  \n    else { \n        Write-Error \"Module $module does not appear to be installed, Please install and run again.\" \n        Exit 1 \n    } \n \n# Variables Declaration \n \n$RIItemDetails = @() \n$LookBackPeriod = \"'Last30Days'\" # Look back Period, valid values are: ['Last7Days', 'Last30Days', 'Last60Days'] and default value 'Last7Days'. \n$RITerms = \"P3Y\" # Valid items are P3Y and P1Y\nif($RITerms = \"P3Y\") \n    { \n    $RITermsValue = \"3 Years\" \n    } \nelse \n    { \n    $RITermsValue = \"1 Year\" \n    } \n \n \n$filterVM =\"$\"+\"filter=properties/resourceType eq 'VirtualMachines' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterAppService = \"$\"+\"filter=properties/resourceType eq 'AppService' and properties/LookBackPeriod eq $LookBackPeriod'\" \n$filterSQLDatabases = \"$\"+\"filter=properties/resourceType eq 'SQLDatabases' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterPostgreSQL = \"$\"+\"filter=properties/resourceType eq 'PostgreSQL' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterManagedDisk = \"$\"+\"filter=properties/resourceType eq 'ManagedDisk' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterMySQL = \"$\"+\"filter=properties/resourceType eq 'MySQL' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterRedHat = \"$\"+\"filter=properties/resourceType eq 'RedHat' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterMariaDB = \"$\"+\"filter=properties/resourceType eq 'MariaDB' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterRedisCache = \"$\"+\"filter=properties/resourceType eq 'RedisCache' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterCosmosDB = \"$\"+\"filter=properties/resourceType eq 'CosmosDB' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterSqlDataWarehouse = \"$\"+\"filter=properties/resourceType eq 'SqlDataWarehouse' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterSUSELinux = \"$\"+\"filter=properties/resourceType eq 'SUSELinux' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterBlockBlob = \"$\"+\"filter=properties/resourceType eq 'BlockBlob' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterAzureDataExplorer = \"$\"+\"filter=properties/resourceType eq 'AzureDataExplorer' and properties/LookBackPeriod eq $LookBackPeriod\" \n$filterVMwareCloudSimple = \"$\"+\"filter=properties/resourceType eq 'VMwareCloudSimple' and properties/LookBackPeriod eq $LookBackPeriod\" \n \n \n$Virtualmachinesobj = @() \n$AppServiceobj = @() \n$sqldatabasesobj = @() \n$managedDiskobj = @() \n$mysqlobj = @() \n$redhatobj = @() \n$mariadbobj = @() \n$rediscacheobj = @() \n$cosmosdbobj = @() \n$sqldatawarehouseobj = @() \n$suselinuxobj = @() \n$blockblobobj = @() \n$azuredataexplorerobj = @() \n$vmwarecloudsimpleobj = @() \n \n \n# *** Login **** \n \n$loginUri = $loginUri = \"https://login.microsoftonline.com/$tenantId/oauth2/token?api-version=1.0\" \n \n \n# APIs to hit for various types \n \n$RecommendationsUriVirtualMachines = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterVM&api-version=2021-10-01\" \n$RecommendationsUriAppService = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterAppService&api-version=2021-10-01\" \n$RecommendationsUriSQLDatabases = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterSQLDatabases&api-version=2021-10-01\" \n$RecommendationsUriPostgreSQL = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterPostgreSQL&api-version=2021-10-01\" \n$RecommendationsUriManagedDisk = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterManagedDisk&api-version=2021-10-01\" \n$RecommendationsUriMySQL = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterMySQL&api-version=2021-10-01\" \n$RecommendationsUriRedHat = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterRedHat&api-version=2021-10-01\" \n$RecommendationsUriMariaDB = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterMariaDB &api-version=2021-10-01\" \n$RecommendationsUriRedisCache = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterRedisCache&api-version=2021-10-01\" \n$RecommendationsUriCosmosDB = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterCosmosDB&api-version=2021-10-01\" \n$RecommendationsUriSqlDataWarehouse = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterSqlDataWarehouse&api-version=2021-10-01\" \n$RecommendationsUriSUSELinux = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterSUSELinux&api-version=2021-10-01\" \n$RecommendationsUriBlockBlob = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterBlockBlob&api-version=2021-10-01\" \n$RecommendationsUriAzureDataExplorer = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterAzureDataExplorer&api-version=2021-10-01\" \n$RecommendationsUriVMwareCloudSimple = \"https://management.azure.com/subscriptions/$subscriptionId/providers/Microsoft.Consumption/reservationRecommendations?$filterVMwareCloudSimple&api-version=2021-10-01\" \n \n$body = @{ \n    grant_type = \"client_credentials\" \n    resource = \"https://management.core.windows.net/\" \n    client_id = $applicationid \n    client_secret = $apiKey \n    } \n \n# Authentication Lines  \n \n$loginResponse = Invoke-RestMethod $loginUri -Method Post -Body $body \n$authorization = $loginResponse.token_type + ' ' + $loginResponse.access_token \n \n# Use the same header in all the calls, so save authorization in a header dictionary \n \n$headers = @{ \n    authorization = $authorization \n} \n \n# Capture all RI Recommendations \n \n$RecommendationsObj = @() \n \n#Virtual Machines \n \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriVirtualMachines -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $virtualmachinesLocation = $Recommendation.Location \n    $virtualmachinesSKU= $Recommendation.sku \n    $virtualmachinesName= $Recommendation.Name \n    $virtualmachinesTerm = $Recommendation.properties.term \n    $virtualmachinesRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $virtualmachinesinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $virtualmachinesinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $virtualmachinesnormalizedSize = $Recommendation.properties.normalizedSize \n    $virtualmachinescostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $virtualmachinesnetSavings = $Recommendation.properties.netSavings * 12\n    $virtualmachinestotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $VirtualmachinesItemDetails = [PSCustomObject]@{     \n                Type = \"Virtual Machines\" \n                Name = $virtualmachinesName \n                Location = $virtualmachinesLocation \n                SKU = $virtualmachinesSKU \n                Term = $virtualmachinesTerm \n                RecommendedQuantity = $virtualmachinesRecommendedQuantity \n                instanceFlexibilityRatio = $virtualmachinesinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $virtualmachinesinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $virtualmachinescostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $virtualmachinesnetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $virtualmachinestotalCostWithReservedInstances \n \n           } \n        $virtualmachinesObj += $VirtualMachinesItemDetails \n        } \n    } \n} \n \n# App Service \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriAppService -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $appserviceLocation = $Recommendation.Location \n    $appserviceSKU= $Recommendation.sku \n    $appserviceName= $Recommendation.Name \n    $appserviceTerm = $Recommendation.properties.term \n    $appserviceRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $appserviceinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $appserviceinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $appservicenormalizedSize = $Recommendation.properties.normalizedSize \n    $appservicecostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $appservicenetSavings = $Recommendation.properties.netSavings * 12\n    $appservicetotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $appserviceItemDetails = [PSCustomObject]@{     \n                Type = \"App Service\" \n                Name = $appserviceName \n                Location = $appserviceLocation \n                SKU = $appserviceSKU \n                Term = $appserviceTerm \n                RecommendedQuantity = $appserviceRecommendedQuantity \n                instanceFlexibilityRatio = $appserviceinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $appserviceinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $appservicecostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $appservicenetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $appservicetotalCostWithReservedInstances \n          } \n        $appserviceObj += $appserviceItemDetails \n        } \n    } \n} \n \n#SQLDatabases \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriSQLDatabases -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $sqldatabasesLocation = $Recommendation.Location \n    $sqldatabasesSKU= $Recommendation.sku \n    $sqldatabasesName= $Recommendation.Name \n    $sqldatabasesTerm = $Recommendation.properties.term \n    $sqldatabasesRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $sqldatabasesinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $sqldatabasesinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $sqldatabasesnormalizedSize = $Recommendation.properties.normalizedSize \n    $sqldatabasescostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $sqldatabasesnetSavings = $Recommendation.properties.netSavings * 12\n    $sqldatabasestotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $sqldatabasesItemDetails = [PSCustomObject]@{     \n                Type = \"SQLDatabases\" \n                Name = $sqldatabasesName \n                Location = $sqldatabasesLocation \n                SKU = $sqldatabasesSKU \n                Term = $sqldatabasesTerm \n                RecommendedQuantity = $sqldatabasesRecommendedQuantity \n                instanceFlexibilityRatio = $sqldatabasesinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $sqldatabasesinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $sqldatabasescostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $sqldatabasesnetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $sqldatabasestotalCostWithReservedInstances \n            } \n        $sqldatabasesObj += $sqldatabasesItemDetails \n        } \n    } \n} \n#PostgreSQL \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriPostgreSQL -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $PostgreSQLLocation = $Recommendation.Location \n    $PostgreSQLSKU= $Recommendation.sku \n    $PostgreSQLName= $Recommendation.Name \n    $PostgreSQLTerm = $Recommendation.properties.term \n    $PostgreSQLRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $PostgreSQLinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $PostgreSQLinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $PostgreSQLnormalizedSize = $Recommendation.properties.normalizedSize \n    $PostgreSQLcostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $PostgreSQLnetSavings = $Recommendation.properties.netSavings * 12\n    $PostgreSQLtotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $postgresqlItemDetails = [PSCustomObject]@{     \n                Type = \"PostgreSQL\" \n                Name = $PostgreSQLName \n                Location = $PostgreSQLLocation \n                SKU = $PostgreSQLSKU \n                Term = $PostgreSQLTerm \n                RecommendedQuantity = $PostgreSQLRecommendedQuantity \n                instanceFlexibilityRatio = $PostgreSQLinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $PostgreSQLinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $PostgreSQLcostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $PostgreSQLnetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $PostgreSQLtotalCostWithReservedInstances \n          } \n        $postgresqlObj += $postgresqlItemDetails \n        } \n    } \n} \n#ManagedDisk \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriManagedDisk -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $manageddiskLocation = $Recommendation.Location \n    $manageddiskSKU= $Recommendation.sku \n    $manageddiskName= $Recommendation.Name \n    $manageddiskTerm = $Recommendation.properties.term \n    $manageddiskRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $manageddiskinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $manageddiskinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $manageddisknormalizedSize = $Recommendation.properties.normalizedSize \n    $manageddiskcostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $manageddisknetSavings = $Recommendation.properties.netSavings * 12\n    $manageddisktotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $manageddiskItemDetails = [PSCustomObject]@{     \n                Type = \"Managed Disk\" \n                Name = $manageddiskName \n                Location = $manageddiskLocation \n                SKU = $manageddiskSKU \n                Term = $manageddiskTerm \n                RecommendedQuantity = $manageddiskRecommendedQuantity \n                instanceFlexibilityRatio = $manageddiskinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $manageddiskinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $manageddiskcostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $manageddisknetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $manageddisktotalCostWithReservedInstances \n           } \n        $manageddiskObj += $manageddisItemDetails \n        } \n    } \n} \n#MySQL \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriMySQL -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $MySQLLocation = $Recommendation.Location \n    $MySQLSKU= $Recommendation.sku \n    $MySQLName= $Recommendation.Name \n    $MySQLTerm = $Recommendation.properties.term \n    $MySQLRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $MySQLinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $MySQLinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $MySQLnormalizedSize = $Recommendation.properties.normalizedSize \n    $MySQLcostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $MySQLnetSavings = $Recommendation.properties.netSavings * 12\n    $MySQLtotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $mysqlItemDetails = [PSCustomObject]@{     \n                Type = \"MySQL\" \n                Name = $MySQLName \n                Location = $MySQLLocation \n                SKU = $MySQLSKU \n                Term = $MySQLTerm \n                RecommendedQuantity = $MySQLRecommendedQuantity \n                instanceFlexibilityRatio = $MySQLinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $MySQLinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $MySQLcostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $MySQLnetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $MySQLtotalCostWithReservedInstances \n            } \n        $mysqlObj += $mysqlItemDetails \n        } \n    } \n} \n#RedHat \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriRedHat -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $RedHatLocation = $Recommendation.Location \n    $RedHatSKU= $Recommendation.sku \n    $RedHatName= $Recommendation.Name \n    $RedHatTerm = $Recommendation.properties.term \n    $RedHatRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $RedHatinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $RedHatinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $RedHatnormalizedSize = $Recommendation.properties.normalizedSize \n    $RedHatcostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $RedHatnetSavings = $Recommendation.properties.netSavings * 12\n    $RedHattotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $redhatItemDetails = [PSCustomObject]@{     \n                Type = \"RedHat\" \n                Name = $RedHatName \n                Location = $RedHatLocation \n                SKU = $RedHatSKU \n                Term = $RedHatTerm \n                RecommendedQuantity = $RedHatRecommendedQuantity \n                instanceFlexibilityRatio = $RedHatinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $RedHatinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $RedHatcostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $RedHatnetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $RedHattotalCostWithReservedInstances \n         } \n        $RedhatObj += $redhatItemDetails \n        } \n    } \n} \n#MariaDB \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriMariaDB -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $MariaDBLocation = $Recommendation.Location \n    $MariaDBSKU= $Recommendation.sku \n    $MariaDBName= $Recommendation.Name \n    $MariaDBTerm = $Recommendation.properties.term \n    $MariaDBRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $MariaDBinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $MariaDBinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $MariaDBnormalizedSize = $Recommendation.properties.normalizedSize \n    $MariaDBcostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $MariaDBnetSavings = $Recommendation.properties.netSavings * 12\n    $MariaDBtotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $mariadbItemDetails = [PSCustomObject]@{     \n                Type = \"MariaDB\" \n                Name = $MariaDBName \n                Location = $MariaDBLocation \n                SKU = $MariaDBSKU \n                Term = $MariaDBTerm \n                RecommendedQuantity = $MariaDBRecommendedQuantity \n                instanceFlexibilityRatio = $MariaDBinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $MariaDBinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $MariaDBcostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $MariaDBnetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $MariaDBtotalCostWithReservedInstances \n            } \n        $mariadbObj += $mariadbItemDetails \n        } \n    } \n} \n#RedisCache \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriRedisCache -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $RedisCacheLocation = $Recommendation.Location \n    $RedisCacheSKU= $Recommendation.sku \n    $RedisCacheName= $Recommendation.Name \n    $RedisCacheTerm = $Recommendation.properties.term \n    $RedisCacheRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $RedisCacheinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $RedisCacheinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $RedisCachenormalizedSize = $Recommendation.properties.normalizedSize \n    $RedisCachecostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $RedisCachenetSavings = $Recommendation.properties.netSavings * 12\n    $RedisCachetotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $rediscacheItemDetails = [PSCustomObject]@{     \n                Type = \"RedisCache\" \n                Name = $RedisCacheName \n                Location = $RedisCacheLocation \n                SKU = $RedisCacheSKU \n                Term = $RedisCacheTerm \n                RecommendedQuantity = $RedisCacheRecommendedQuantity \n                instanceFlexibilityRatio = $RedisCacheinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $RedisCacheinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $RedisCachecostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $RedisCachenetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $RedisCachetotalCostWithReservedInstances \n            } \n        $RediscacheObj += $rediscacheItemDetails \n        } \n    } \n} \n \n#CosmosDB \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriCosmosDB -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $CosmosDBLocation = $Recommendation.Location \n    $CosmosDBSKU= $Recommendation.sku \n    $CosmosDBName= $Recommendation.Name \n    $CosmosDBTerm = $Recommendation.properties.term \n    $CosmosDBRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $CosmosDBinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $CosmosDBinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $CosmosDBnormalizedSize = $Recommendation.properties.normalizedSize \n    $CosmosDBcostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $CosmosDBnetSavings = $Recommendation.properties.netSavings * 12\n    $CosmosDBtotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $cosmosdbItemDetails = [PSCustomObject]@{     \n                Type = \"CosmosDB\" \n                Name = $CosmosDBName \n                Location = $CosmosDBLocation \n                SKU = $CosmosDBSKU \n                Term = $CosmosDBTerm \n                RecommendedQuantity = $CosmosDBRecommendedQuantity \n                instanceFlexibilityRatio = $CosmosDBinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $CosmosDBinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $CosmosDBcostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $CosmosDBnetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $CosmosDBtotalCostWithReservedInstances \n         } \n        $cosmosdbObj += $cosmosdbItemDetails \n        } \n    } \n} \n \n#SqlDataWarehouse \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriSqlDataWarehouse -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $SqlDataWarehouseLocation = $Recommendation.Location \n    $SqlDataWarehouseSKU= $Recommendation.sku \n    $SqlDataWarehouseName= $Recommendation.Name \n    $SqlDataWarehouseTerm = $Recommendation.properties.term \n    $SqlDataWarehouseRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $SqlDataWarehouseinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $SqlDataWarehouseinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $SqlDataWarehousenormalizedSize = $Recommendation.properties.normalizedSize \n    $SqlDataWarehousecostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $SqlDataWarehousenetSavings = $Recommendation.properties.netSavings * 12\n    $SqlDataWarehousetotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $sqldatawarehouseItemDetails = [PSCustomObject]@{     \n                Type = \"SqlDataWarehouse\" \n                Name = $SqlDataWarehouseName \n                Location = $SqlDataWarehouseLocation \n                SKU = $SqlDataWarehouseSKU \n                Term = $SqlDataWarehouseTerm \n                RecommendedQuantity = $SqlDataWarehouseRecommendedQuantity \n                instanceFlexibilityRatio = $SqlDataWarehouseinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $SqlDataWarehouseinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $SqlDataWarehousecostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $SqlDataWarehousenetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $SqlDataWarehousetotalCostWithReservedInstances \n            } \n        $sqldatawarehouseObj += $sqldatawarehouseItemDetails \n        } \n    } \n} \n \n#SUSELinux \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriSUSELinux -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $SUSELinuxLocation = $Recommendation.Location \n    $SUSELinuxSKU= $Recommendation.sku \n    $SUSELinuxName= $Recommendation.Name \n    $SUSELinuxTerm = $Recommendation.properties.term \n    $SUSELinuxRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $vinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $SUSELinuxinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $SUSELinuxnormalizedSize = $Recommendation.properties.normalizedSize \n    $SUSELinuxcostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $SUSELinuxnetSavings = $Recommendation.properties.netSavings * 12\n    $SUSELinuxtotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $suselinuxItemDetails = [PSCustomObject]@{     \n                Type = \"SUSELinux\" \n                Name = $SUSELinuxName \n                Location = $LSUSELinuxocation \n                SKU = $SUSELinuxSKU \n                Term = $SUSELinuxTerm \n                RecommendedQuantity = $SUSELinuxRecommendedQuantity \n                instanceFlexibilityRatio = $SUSELinuxinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $SUSELinuxinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $SUSELinuxcostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $SUSELinuxnetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $SUSELinuxtotalCostWithReservedInstances \n           } \n        $suselinuxObj += $suselinuxItemDetails \n        } \n    } \n} \n \n#BlockBlob \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriBlockBlob -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $BlockBlobLocation = $Recommendation.Location \n    $BlockBlobSKU= $Recommendation.sku \n    $BlockBlobName= $Recommendation.Name \n    $BlockBlobTerm = $Recommendation.properties.term \n    $BlockBlobRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $BlockBlobinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $BlockBlobinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $BlockBlobnormalizedSize = $Recommendation.properties.normalizedSize \n    $BlockBlobcostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $BlockBlobnetSavings = $Recommendation.properties.netSavings * 12\n    $BlockBlobtotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $blockblobItemDetails = [PSCustomObject]@{     \n                Type = \"BlockBlob\" \n                Name = $BlockBlobName \n                Location = $BlockBlobLocation \n                SKU = $BlockBlobSKU \n                Term = $BlockBlobTerm \n                RecommendedQuantity = $BlockBlobRecommendedQuantity \n                instanceFlexibilityRatio = $BlockBlobinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $BlockBlobinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $BlockBlobcostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $BlockBlobnetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $BlockBlobtotalCostWithReservedInstances \n           } \n        $blockblobObj += $blockblobItemDetails \n        } \n    } \n} \n \n#VMwareCloudSimple \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriVMwareCloudSimple -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $VMwareCloudSimpleLocation = $Recommendation.Location \n    $VMwareCloudSimpleSKU= $Recommendation.sku \n    $VMwareCloudSimpleName= $Recommendation.Name \n    $VMwareCloudSimpleTerm = $Recommendation.properties.term \n    $VMwareCloudSimpleRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $VMwareCloudSimpleinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $VMwareCloudSimpleinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $VMwareCloudSimplenormalizedSize = $Recommendation.properties.normalizedSize \n    $VMwareCloudSimplecostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $VMwareCloudSimplenetSavings = $Recommendation.properties.netSavings * 12\n    $VMwareCloudSimpletotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $vmwarecloudsimpleItemDetails = [PSCustomObject]@{     \n                Type = \"VMwareCloudSimple\" \n                Name = $VMwareCloudSimpleName \n                Location = $VMwareCloudSimpleLocation \n                SKU = $VMwareCloudSimpleSKU \n                Term = $VMwareCloudSimpleTerm \n                RecommendedQuantity = $VMwareCloudSimpleRecommendedQuantity \n                instanceFlexibilityRatio = $VMwareCloudSimpleinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $VMwareCloudSimpleinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $VMwareCloudSimplecostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $VMwareCloudSimplenetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $VMwareCloudSimpletotalCostWithReservedInstances \n           } \n        $vmwarecloudsimpleObj += $vmwarecloudsimpleItemDetails \n        } \n    } \n} \n \n#AzureDataExplorer \n \n$RecommendationsList = $Null \n$RecommendationsList = Invoke-RestMethod $RecommendationsUriAzureDataExplorer -Headers $headers -ContentType \"application/json\" \n \nif($RecommendationsList){ \nforeach ($Recommendation in $RecommendationsList.Value) \n    { \n    if($Recommendation.properties.Term -eq $RITerms) \n    { \n    $AzureDataExplorerLocation = $Recommendation.Location \n    $AzureDataExplorerSKU= $Recommendation.sku \n    $AzureDataExplorerName= $Recommendation.Name \n    $AzureDataExplorerTerm = $Recommendation.properties.term \n    $AzureDataExplorerRecommendedquantity = $Recommendation.properties.Recommendedquantity \n    $AzureDataExplorerinstanceFlexibilityRatio = $Recommendation.properties.instanceFlexibilityRatio \n    $AzureDataExplorerinstanceFlexibilityGroup = $Recommendation.properties.instanceFlexibilityGroup \n    $AzureDataExplorernormalizedSize = $Recommendation.properties.normalizedSize \n    $AzureDataExplorercostWithNoReservedInstances = $Recommendation.properties.costWithNoReservedInstances * 12\n    $AzureDataExplorernetSavings = $Recommendation.properties.netSavings * 12\n    $AzureDataExplorertotalCostWithReservedInstances = $Recommendation.properties.totalCostWithReservedInstances * 12\n         \n    $azuredataexplorerItemDetails = [PSCustomObject]@{     \n                Type = \"AzureDataExplorer\" \n                Name = $AzureDataExplorerName \n                Location = $AzureDataExplorerLocation \n                SKU = $AzureDataExplorerSKU \n                Term = $AzureDataExplorerTerm \n                RecommendedQuantity = $AzureDataExplorerRecommendedQuantity \n                instanceFlexibilityRatio = $AzureDataExplorerinstanceFlexibilityRatio \n                instanceFlexibilityGroup = $AzureDataExplorerinstanceFlexibilityGroup \n                costWithNoReservedInstances = \"{0:n2}\" -f $AzureDataExplorercostWithNoReservedInstances \n                netSavings = \"{0:n2}\" -f $AzureDataExplorernetSavings \n                totalCostWithReservedInstances = \"{0:n2}\" -f $AzureDataExplorertotalCostWithReservedInstances \n         } \n        $azuredataexplorerObj += $azuredataexplorerItemDetails \n        } \n    } \n} \n \n \nDisconnect-AzAccount | Out-Null \n \n \n#Create Summary Objects \n    $SumObj = @() \n     \n    $VirtualmachinesSavings = 0 \n    $Virtualmachineswith = 0 \n    $Virtualmachineswithout = 0 \n    $Virtualmachinescount = 0 \n  \n $appserviceSavings = 0 \n    $appservicewith = 0 \n    $appservicewithout = 0 \n    $appservicecount = 0 \n  \n $sqldatabasesSavings = 0 \n    $sqldatabaseswith = 0 \n    $sqldatabaseswithout = 0 \n    $sqldatabasescount = 0 \n  \n $postgresqlSavings = 0 \n    $postgresqlwith = 0 \n    $postgresqlwithout = 0 \n    $postgresqlcount = 0 \n \n    $manageddiskSavings = 0 \n    $manageddiskwith = 0 \n    $manageddiskwithout = 0 \n    $manageddiskcount = 0 \n \n    $mysqlSavings = 0 \n    $mysqlwith = 0 \n    $mysqlwithout = 0 \n    $mysqlcount = 0 \n \n    $RedhatSavings = 0 \n    $Redhatwith = 0 \n    $Redhatwithout = 0 \n    $Redhatcount = 0 \n \n    $mariadbSavings = 0 \n    $mariadbwith = 0 \n    $mariadbwithout = 0 \n    $mariadbcount = 0 \n \n    $RediscacheSavings = 0 \n    $Rediscachewith = 0 \n    $Rediscachewithout = 0 \n    $Rediscachecount = 0 \n \n    $cosmosdbSavings = 0 \n    $cosmosdbwith = 0 \n    $cosmosdbwithout = 0 \n    $cosmosdbcount = 0 \n \n    $sqldatawarehouseSavings = 0 \n    $sqldatawarehousewith = 0 \n    $sqldatawarehousewithout = 0 \n    $sqldatawarehousecount = 0 \n \n    $suselinuxSavings = 0 \n    $suselinuxwith = 0 \n    $suselinuxwithout = 0 \n    $suselinuxcount = 0 \n \n    $blockblobSavings = 0 \n    $blockblobwith = 0 \n    $blockblobwithout = 0 \n    $blockblobcount = 0 \n \n    $vmwarecloudsimpleSavings = 0 \n    $vmwarecloudsimplewith = 0 \n    $vmwarecloudsimplewithout = 0 \n    $vmwarecloudsimplecount = 0 \n \n    $azuredataexplorerSavings = 0 \n    $azuredataexplorerwith = 0 \n    $azuredataexplorerwithout = 0 \n    $azuredataexplorercount = 0 \n \n \n    $AppServicecost = @() \n    $sqldatabasescost = @() \n    $managedDiskcost = @() \n    $mysqlcost = @() \n    $redhatcost = @() \n    $mariadbcost = @() \n    $rediscachecost = @() \n    $cosmosdbcost = @() \n    $sqldatawarehousecost = @() \n    $suselinuxcost = @() \n    $blockblobcost = @() \n    $azuredataexplorercost = @() \n    $vmwarecloudsimplecost = @() \n    $TotalCount = 0 \n     \n    $TotalCostwithout = 0 \n    $TotalCostwith = 0 \n    $TotalCostSavings = 0 \n     \n           \n    #Virtual Machines RI Recommendations Costs \n    if($virtualmachinesObj) \n        { \n        $virtualmachinescount = $virtualmachinesObj.count \n        $virtualmachinesObj | ForEach-Object{ \n        $virtualmachineswithout += $_.costWithNoReservedInstances \n        } \n        $virtualmachinesObj | ForEach-Object{ \n        $virtualmachineswith += $_.totalCostWithReservedInstances \n        } \n        $virtualmachinesObj | ForEach-Object{ \n        $virtualmachinesSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Virtual Machines Recommendations\" \n                    Count = $virtualmachinescount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $virtualmachineswithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $virtualmachineswith \n                    netSavings = \"{0:n2}\" -f $virtualmachinesSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n         \n         \n       #App Service RI Recommendations Costs \n    if($appserviceObj) \n        { \n        $appservicecount = $appserviceObj.count \n        $appserviceObj | ForEach-Object{ \n        $appservicewithout += $_.costWithNoReservedInstances \n        } \n        $appserviceObj | ForEach-Object{ \n        $appservicewith += $_.totalCostWithReservedInstances \n        } \n        $appserviceObj | ForEach-Object{ \n        $appserviceSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"App Services Recommendations\" \n                    Count = $appservicecount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $appservicewithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $appservicewith \n                    netSavings = \"{0:n2}\" -f $appserviceSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        }      \n         \n           \n    #SQL Databases RI Recommendations Costs \n    if($SQLDatabasesObj) \n        { \n        $SQLDatabasescount = $SQLDatabasesObj.count \n        $SQLDatabasesObj | ForEach-Object{ \n        $SQLDatabaseswithout += $_.costWithNoReservedInstances \n        } \n        $SQLDatabasesObj | ForEach-Object{ \n        $SQLDatabaseswith += $_.totalCostWithReservedInstances \n        } \n        $SQLDatabasesObj | ForEach-Object{ \n        $SQLDatabasesSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"SQL Databases Recommendations\" \n                    Count = $SQLDatabasescount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $SQLDatabaseswithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $SQLDatabaseswith \n                    netSavings = \"{0:n2}\" -f $SQLDatabasesSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        }   \n         \n         \n    #PostgreSQL RI Recommendations Costs \n    if($PostgreSQLObj) \n        { \n        $PostgreSQLcount = $PostgreSQLObj.count \n        $PostgreSQLObj | ForEach-Object{ \n        $PostgreSQLwithout += $_.costWithNoReservedInstances \n        } \n        $PostgreSQLObj | ForEach-Object{ \n        $PostgreSQLwith += $_.totalCostWithReservedInstances \n        } \n        $PostgreSQLObj | ForEach-Object{ \n        $PostgreSQLSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"PostgreSQL Recommendations\" \n                    Count = $PostgreSQLcount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $PostgreSQLwithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $PostgreSQLwith \n                    netSavings = \"{0:n2}\" -f $PostgreSQLSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n   \n   \n    #Managed Disks RI Recommendations Costs \n    if($ManagedDiskObj) \n        { \n        $ManagedDiskcount = $ManagedDiskObj.count \n        $ManagedDiskObj | ForEach-Object{ \n        $ManagedDiskwithout += $_.costWithNoReservedInstances \n        } \n        $ManagedDiskObj | ForEach-Object{ \n        $ManagedDiskwith += $_.totalCostWithReservedInstances \n        } \n        $ManagedDiskObj | ForEach-Object{ \n        $ManagedDiskSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Managed Disk Recommendations\" \n                    Count = $ManagedDiskcount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $ManagedDiskwithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $ManagedDiskwith \n                    netSavings = \"{0:n2}\" -f $ManagedDiskSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        }       \n         \n \n    #My SQL RI Recommendations Costs \n    if($MySQLObj) \n        { \n        $MySQLcount = $MySQLObj.count \n        $MySQLObj | ForEach-Object{ \n        $MySQLwithout += $_.costWithNoReservedInstances \n        } \n        $MySQLObj | ForEach-Object{ \n        $MySQLwith += $_.totalCostWithReservedInstances \n        } \n        $MySQLObj | ForEach-Object{ \n        $MySQLSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"MySQL Recommendations\" \n                    Count = $MySQLcount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $MySQLwithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $MySQLwith \n                    netSavings = \"{0:n2}\" -f $MySQLSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n \n    #Red Hat RI Recommendations Costs \n    if($RedHatObj) \n        { \n        $RedHatcount = $RedHatObj.count \n        $RedHatObj | ForEach-Object{ \n        $RedHatwithout += $_.costWithNoReservedInstances \n        } \n        $RedHatObj | ForEach-Object{ \n        $RedHatwith += $_.totalCostWithReservedInstances \n        } \n        $RedHatObj | ForEach-Object{ \n        $RedHatSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Red Hat Recommendations\" \n                    Count = $RedHatcount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $RedHatwithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $RedHatwith \n                    netSavings = \"{0:n2}\" -f $RedHatSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n \n    #Maria DB RI Recommendations Costs \n    if($MariaDBObj) \n        { \n        $MariaDBcount = $MariaDBObj.count \n        $MariaDBObj | ForEach-Object{ \n        $MariaDBwithout += $_.costWithNoReservedInstances \n        } \n        $MariaDBObj | ForEach-Object{ \n        $MariaDBwith += $_.totalCostWithReservedInstances \n        } \n        $MariaDBObj | ForEach-Object{ \n        $MariaDBSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Maria DB Recommendations\" \n                    Count = $MariaDBcount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $MariaDBwithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $MariaDBwith \n                    netSavings = \"{0:n2}\" -f $MariaDBSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n \n    #Redis Cache RI Recommendations Costs \n    if($RedisCacheObj) \n        { \n        $RedisCachecount = $RedisCacheObj.count \n        $RedisCacheObj | ForEach-Object{ \n        $RedisCachewithout += $_.costWithNoReservedInstances \n        } \n        $RedisCacheObj | ForEach-Object{ \n        $RedisCachewith += $_.totalCostWithReservedInstances \n        } \n        $RedisCacheObj | ForEach-Object{ \n        $RedisCacheSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Redis Cache Recommendations\" \n                    Count = $RedisCachecount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $RedisCachewithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $RedisCachewith \n                    netSavings = \"{0:n2}\" -f $RedisCacheSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n    #Comsos DB RI Recommendations Costs \n    if($CosmosDBObj) \n        { \n        $CosmosDBcount = $CosmosDBObj.count \n        $CosmosDBObj | ForEach-Object{ \n        $CosmosDBwithout += $_.costWithNoReservedInstances \n        } \n        $CosmosDBObj | ForEach-Object{ \n        $CosmosDBwith += $_.totalCostWithReservedInstances \n        } \n        $CosmosDBObj | ForEach-Object{ \n        $CosmosDBSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Cosmos DB Recommendations\" \n                    Count = $CosmosDBcount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $CosmosDBwithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $CosmosDBwith \n                    netSavings = \"{0:n2}\" -f $CosmosDBSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n    #SQL Datawarehouse RI Recommendations Costs \n    if($SqlDataWarehouseObj) \n        { \n        $SqlDataWarehousecount = $SqlDataWarehouseObj.count \n        $SqlDataWarehouseObj | ForEach-Object{ \n        $SqlDataWarehousewithout += $_.costWithNoReservedInstances \n        } \n        $SqlDataWarehouseObj | ForEach-Object{ \n        $SqlDataWarehousewith += $_.totalCostWithReservedInstances \n        } \n        $SqlDataWarehouseObj | ForEach-Object{ \n        $SqlDataWarehouseSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Sql DataWarehouse Recommendations\" \n                    Count = $SqlDataWarehousecount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $SqlDataWarehousewithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $SqlDataWarehousewith \n                    netSavings = \"{0:n2}\" -f $SqlDataWarehouseSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n    #SuseLinux RI Recommendations Costs \n    if($SUSELinuxObj) \n        { \n        $SUSELinuxcount = $SUSELinuxObj.count \n        $SUSELinuxObj | ForEach-Object{ \n        $SUSELinuxwithout += $_.costWithNoReservedInstances \n        } \n        $SUSELinuxObj | ForEach-Object{ \n        $SUSELinuxwith += $_.totalCostWithReservedInstances \n        } \n        $SUSELinuxObj | ForEach-Object{ \n        $SUSELinuxSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"SUSE Linux Recommendations\" \n                    Count = $SUSELinuxcount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $SUSELinuxwithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $SUSELinuxwith \n                    netSavings = \"{0:n2}\" -f $SUSELinuxSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n \n    #Block Blob RI Recommendations Costs \n    if($BlockBlobObj) \n        { \n        $BlockBlobcount = $BlockBlobObj.count \n        $BlockBlobObj | ForEach-Object{ \n        $BlockBlobwithout += $_.costWithNoReservedInstances \n        } \n        $BlockBlobObj | ForEach-Object{ \n        $BlockBlobwith += $_.totalCostWithReservedInstances \n        } \n        $BlockBlobObj | ForEach-Object{ \n        $BlockBlobSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Block Blob Recommendations\" \n                    Count = $BlockBlobcount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $BlockBlobwithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $BlockBlobwith \n                    netSavings = \"{0:n2}\" -f $BlockBlobSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n    #VMWare Cloud Simple RI Recommendations Costs \n    if($VMwareCloudSimpleObj) \n        { \n        $VMwareCloudSimplecount = $VMwareCloudSimpleObj.count \n        $VMwareCloudSimpleObj | ForEach-Object{ \n        $VMwareCloudSimplewithout += $_.costWithNoReservedInstances \n        } \n        $VMwareCloudSimpleObj | ForEach-Object{ \n        $VMwareCloudSimplewith += $_.totalCostWithReservedInstances \n        } \n        $VMwareCloudSimpleObj | ForEach-Object{ \n        $VMwareCloudSimpleSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"VMware Cloud Simple Recommendations\" \n                    Count = $VMwareCloudSimplecount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $VMwareCloudSimplewithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $VMwareCloudSimplewith \n                    netSavings = \"{0:n2}\" -f $VMwareCloudSimpleSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n    #Azure Data Explorer RI Recommendations Costs \n    if($AzureDataExplorerObj) \n        { \n        $AzureDataExplorercount = $AzureDataExplorerObj.count \n        $AzureDataExplorerObj | ForEach-Object{ \n        $AzureDataExplorerwithout += $_.costWithNoReservedInstances \n        } \n        $AzureDataExplorerObj | ForEach-Object{ \n        $AzureDataExplorerwith += $_.totalCostWithReservedInstances \n        } \n        $AzureDataExplorerObj | ForEach-Object{ \n        $AzureDataExplorerSavings += $_.netSavings \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Azure Data Explorer Recommendations\" \n                    Count = $AzureDataExplorercount \n                    costWithNoReservedInstances = \"{0:n2}\" -f $AzureDataExplorerwithout \n                    totalCostWithReservedInstances = \"{0:n2}\" -f $AzureDataExplorerwith \n                    netSavings = \"{0:n2}\" -f $AzureDataExplorerSavings \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n \n         \n        # Total Figures for all RI Recommendations \n         \n         \n        $TotalCostSavings = \"{0:n2}\" -f ($virtualmachinessavings+$appservicesavings+$sqldatabasessavings+$postgresqlsavings+$manageddisksavings+$mysqlsavings+$Redhatsavings+$mariadbsavings+$Rediscachesavings+$cosmosdbsavings+$sqldatawarehousesavings+$suselinuxsavings+$blockblobsavings+$vmwarecloudsimplesavings+$azuredataexplorersavings) \n        $TotalCostwith = \"{0:n2}\" -f ($virtualmachineswith+$appservicewith+$sqldatabaseswith+$postgresqlwith+$manageddiskwith+$mysqlwith+$Redhatwith+$mariadbwith+$Rediscachewith+$cosmosdbwith+$sqldatawarehousewith+$suselinuxwith+$blockblobwith+$vmwarecloudsimplewith+$azuredataexplorerwith) \n        $TotalCostwithout = \"{0:n2}\" -f ($virtualmachineswithout+$appservicewithout+$sqldatabaseswithout+$postgresqlwithout+$manageddiskwithout+$mysqlwithout+$Redhatwithout+$mariadbwithout+$Rediscachewithout+$cosmosdbwithout+$sqldatawarehousewithout+$suselinuxwithout+$blockblobwithout+$vmwarecloudsimplewithout+$azuredataexplorerwithout) \n        $TotalCount = $virtualmachinescount+$appservicecount+$sqldatabasescount+$postgresqlcount+$manageddiskcount+$mysqlcount+$Redhatcount+$mariadbcount+$Rediscachecount+$cosmosdbcount+$sqldatawarehousecount+$suselinuxcount+$blockblobcount+$vmwarecloudsimplecount+$azuredataexplorercount \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Totals\" \n                    Count = $TotalCount \n                    costWithNoReservedInstances = $TotalCostwithout \n                    totalCostWithReservedInstances = $TotalCostWith \n                    netSavings = $TotalCostSavings \n                                        } \n                $SumObj += $SummaryItemDetails       \n \n#Create Table \n    $TableArrray = @($Virtualmachinesobj+$AppServiceobj+$sqldatabasesobj+$managedDiskobj+$mysqlobj+$redhatobj+$mariadbobj+$rediscacheobj+$cosmosdbobj+$sqldatawarehouseobj+$suselinuxobj+$blockblobobj+$azuredataexplorerobj+$vmwarecloudsimpleobj) \n \n#Create Base File \n    New-Item -Path $ReportPath -Force -Confirm:$false | Out-Null  \n \n#Inject header to base file \nAdd-Content -Path $reportpath -Value (' \n<html xmlns:xi=\"http://www.w3.org/2001/XInclude\" xmlns:b=\"http://www.backbase.com/2006/btl\" xmlns:e=\"http://www.backbase.com/2006/xel\" xmlns:d=\"http://www.backbase.com/2006/tdl\" xmlns:c=\"http://www.backbase.com/2006/command\" xmlns:rep=\"http://www.embotics.com/vcommander/report\"> \n<head xmlns:bf=\"http://www.backbase.com/2007/forms\"> \n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> \n<title>Report</title> \n<meta content=\"IE=Edge\" http-equiv=\"X-UA-Compatible\"> \n<script SRC=\"/reportlibs/fusioncharts3/fusioncharts.js\" type=\"text/javascript\"></script><script SRC=\"/reportlibs/fusioncharts3/fusioncharts.charts.js\" type=\"text/javascript\"></script><script SRC=\"/reportlibs/fusioncharts3/themes/fusioncharts.theme.fint.js\" type=\"text/javascript\"></script><script SRC=\"/reportlibs/lightbox.js\" type=\"text/javascript\"></script><script type=\"text/javascript\"> \n     function showhide(id){ \n        if (document.getElementById){ \n           obj = document.getElementById(id); \n           if (obj.style.display == \"none\"){ \n             obj.style.display = \"\"; \n           } else { \n             obj.style.display = \"none\"; \n           } \n         } \n       } \n        </script><script type=\"text/javascript\">    \n      function keydown(e) { \n          if(e.ctrlKey && e.keyCode==80) { // CTRL + P \n              e.preventDefault(); \n              e.stopPropagation(); \n              embPrint(); \n       } \n       } \n       function embPrint() { \n         window.print(); \n      } \n       document.onkeydown = keydown; \n        </script><script src=\"/Backbase/bb.js\" type=\"text/javascript\"></script><script type=\"text/javascript\"> \n        \n        function createEnlarge(contId, chartObj){ \n          var cont = document.getElementById(contId); \n          var icon = document.createElement(''i''); \n           icon.className=\"showLightbox fa fa-search-plus color-gray\"; \n              icon.style.marginTop = (cont.clientHeight - 24) + ''px''; \n              icon.onclick = function(){ \n      showLightboxForElement(icon, chartObj); \n     }; \n          cont.insertBefore(icon,cont.firstChild);  \n        } \n        </script> \n<link href=\"/css/default.css\" type=\"text/css\" rel=\"stylesheet\"> \n<link href=\"/css/skin.css\" type=\"text/css\" rel=\"stylesheet\"> \n<link href=\"/css/icons.css\" type=\"text/css\" rel=\"stylesheet\"> \n<link href=\"/css/fa/font-awesome.css\" type=\"text/css\" rel=\"stylesheet\"> \n</head> \n<body class=\"report_html billing\"> \n<style> \n</style> \n<xmp xmlns:bf=\"http://www.backbase.com/2007/forms\" class=\"printLandscape\" type=\"application/backbase+xml\" backbase=\"true\"> \n<xi:include href=\"/Backbase/skin.xml\"/> \n<div name=\"report_banner_logo\"></div> \n<div name=\"report_controls\"> \n<div id=\"report_logo\"></div> \n<b:button>Print \n                <e:handler type=\"text/javascript\" event=\"click\"> \n                    embPrint(); \n                </e:handler> \n</b:button> \n</div> \n<div name=\"report_banner_title\"> \n<h1>Azure Reserved Instance Report</h1> \n</div> \n<div name=\"report_banner_subtitle\"> \n<ul class=\"report_para\"> \n<table class=\"clear_border_report_table\"> \n \n') -Force -Confirm:$false \n \nAdd-Content -Path $reportpath -Value (\" \n<tr> \n<td><label>Creation Date:</label></td><td>$CreationDate</td> \n</tr> \n<tr> \n<td><label>Azure Account:</label></td><td>$SanitzedAccount</td> \n</tr> \n<tr> \n<td><label>Account Name:</label></td><td>$AccountName</td>\n</tr>\n<tr> \n<td><label>Reservation Terms:</label></td><td>$RITermsValue</td>\n</tr>\n</table> \n</ul> \n</div> \n<div> \n<p></p> \n</div> \n<br> \n</br>  \n<table id=\"\"table-1\"\"> \n<tr> \n<td> \n \n<div id=\"\"table1Div\"\"> \n<div class=\"\"tableData\"\"> \n<table class=\"\"table_data\"\"> \n<tr> \n<th>Savings Summary</th><th>Count</th><th>Cost Without RI ($)</th><th>Cost With RI ($)</th><th>Savings ($)</th> \n</tr> \n\") -Force -Confirm:$false \n \n#Add Summary Table Objects \n$SumObj | ForEach-Object { \nif($_.Type){[string]$sumtp = $_.Type} \n    Else{$sumtp =\"-\"} \nif($_.Count){[int]$sumcount = $_.Count} \n    Else{$sumcount = \"-\"} \nif($_.costWithNoReservedInstances){[float]$sumcostwithout = $_.costWithNoReservedInstances} \n    Else{$sumcostwithout = \"-\"}  \nif($_.totalCostWithReservedInstances){[float]$sumcostwith = $_.totalCostWithReservedInstances} \n    Else{$sumcostwith = \"-\"} \nif($_.netSavings){[float]$sumcostsavings = $_.netSavings} \n    Else{$sumcostsavings = \"-\"}   \n \n \nAdd-Content -Path $reportpath -Value (\" \n<tr> \n<td>$sumtp</td><td>$sumcount</td><td>$sumcostwithout</td><td>$sumcostwith</td><td>$sumcostsavings</td> \n</tr> \n\") -force -Confirm:$false \n} \n \nAdd-Content -Path $reportpath -Value (\" \n</table> \n</div> \n</div> \n \n<script type=\"\"text/javascript\"\"> \n</script></td> \n</tr> \n</table> \n<table width=\"\"100%\"\" id=\"\"table-2\"\"> \n<tr> \n<td> \n<p> \n<b>Item Summary</b> \n</p> \n<div class=\"\"chart_details\"\"> \n<table class=\"\"report_table\"\"> \n<tr> \n<th>Type</th><th class=\"\"rightAligned\"\">Identifier</th><th class=\"\"rightAligned\"\">Location</th><th class=\"\"rightAligned\"\">SKU</th><th class=\"\"rightAligned\"\">Term</th><th class=\"\"rightAligned\"\">Recommended Quantity</th><th class=\"\"rightAligned\"\">Instance Flexibility Ratio</th><th class=\"\"rightAligned\"\">Instance Flexibility Group</th><th class=\"\"rightAligned\"\">Cost Without RI ($)</th><th class=\"\"rightAligned\"\">Cost With RI ($)</th><th class=\"\"rightAligned\"\">Total Savings ($)</th> \n</tr> \n\") -force -Confirm:$false \n \n#Add Summary Table Objects \n$SortedArray = $TableArrray | Sort-object -Property Type \n$Sortedarray| ForEach-Object { \n    $linetp = $lineid = $linelocation = $linesku  = $lineterm  = $linerecommendedquantity  = $lineinstanceFlexibilityRatio  = $lineinstanceFlexibilityGroup  = $linecostWithNoReservedInstances  = $linetotalCostWithReservedInstances  = $linenetSavings = $null \n    if($_.Type){[string]$linetp = $_.Type} \n    Else{$linetp =\"-\"} \nif($_.Name){[string]$lineid = $_.Name} \n    Else{$lineid =\"-\"} \nif($_.Location){$lineLocation = $_.Location} \n    Else{$LineLocation =\"-\"} \nif($_.SKU){$lineSKU = $_.SKU} \n    Else{$LineSKU =\"-\"} \nif($_.Term){$lineTerm = $_.Term} \n    Else{$LineTerm =\"-\"} \nif($_.RecommendedQuantity){$lineRecommendedQuantity = $_.RecommendedQuantity} \n    Else{$LineRecommendedQuantity =\"-\"} \nif($_.instanceFlexibilityRatio){$lineinstanceFlexibilityRatio = $_.instanceFlexibilityRatio} \n    Else{$LineinstanceFlexibilityRatio =\"-\"} \nif($_.instanceFlexibilityGroup){$lineinstanceFlexibilityGroup = $_.instanceFlexibilityGroup} \n    Else{$LineinstanceFlexibilityGroup =\"-\"} \nif($_.costWithNoReservedInstances){$linecostWithNoReservedInstances = $_.costWithNoReservedInstances} \n    Else{$LinecostWithNoReservedInstances =\"-\"} \nif($_.totalCostWithReservedInstances){$linetotalCostWithReservedInstances = $_.totalCostWithReservedInstances} \n    Else{$LinetotalCostWithReservedInstances =\"-\"} \nif($_.netSavings ){$linenetSavings  = $_.netSavings } \n    Else{$LinenetSavings  =\"-\"} \n    #Write-Debug \"Object-$Linetp $LineRegn $lineid $lineTags $lineDate $yCost $Size\" \n     \nAdd-Content -Path $reportpath -Value (\" \n<tr>   \n<td>$linetp</td><td class=\"\"rightAligned\"\">$lineid</td><td class=\"\"rightAligned\"\">$LineLocation</td><td class=\"\"rightAligned\"\">$LineSKU</td><td class=\"\"rightAligned\"\">$lineterm</td><td class=\"\"rightAligned\"\">$linerecommendedquantity</td><td class=\"\"rightAligned\"\">$lineinstanceFlexibilityRatio</td><td class=\"\"rightAligned\"\">$lineinstanceFlexibilityGroup</td><td class=\"\"rightAligned\"\">$linecostWithNoReservedInstances</td><td class=\"\"rightAligned\"\">$linetotalCostWithReservedInstances</td><td class=\"\"rightAligned\"\">$linenetSavings</td> \n</tr> \n \n\") -force -Confirm:$false \n} \nAdd-Content -Path $reportpath -Value (\" \n<tr> \n<td colspan=\"\"1448\"\"><span class=\"\"recordDesc\"\"></span></td> \n</tr> \n<tr> \n<td class=\"\"blackLine\"\" colspan=\"\"3458\"\"></td> \n</tr> \n \n</table> \n</div> \n</td> \n</tr> \n \n</table> \n<div id=\"\"report_bottom\"\"></div> \n</xmp> \n</body> \n</html> \n\") -force -Confirm:$false \n \n \nWrite-Output \"AZURERPath#$FileName\"  \n  \n",
        "script_arguments": "",
        "timeout": 300,
        "executable": "powershell.exe",
        "capture_output": true
      }
    },
    {
      "name": "Parse Output for report URL",
      "type": "EMBEDDED_SCRIPT",
      "condition": "#{target.cloudAccount.type} -eq \"ms_arm\"",
      "data": {
        "credentials": null,
        "failure_action": "FAIL_STEP",
        "script_contents": "$ReportName = \"#{steps['Run Azure RI Report'].output}\" \n$CommanderAddress = \"#{system.address}\" \n$Report = $Reportname.Split('#')[1] \nWrite-Output \"https://$CommanderAddress/reports/$Report\" ",
        "script_arguments": "",
        "timeout": 300,
        "executable": "powershell.exe",
        "capture_output": true
      }
    },
    {
      "name": "Send Email",
      "type": "EMAIL",
      "condition": "#{target.cloudAccount.type} -eq \"ms_arm\"",
      "data": {
        "address_list": "youraddress@yourcomapny.com",
        "email_body": "The Report you requested is ready. \r\nreport address: #{steps['Parse Output for report URL'].output}",
        "email_subject": "Azure RI Report",
        "include_details": true
      }
    }
  ]
}