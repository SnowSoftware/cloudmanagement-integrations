{
  "id": "",
  "guid": "",
  "name": "Azure Snapshots older than X",
  "type": "COMMAND",
  "change_description": null,
  "fulfillment_rule": "NONE",
  "add_owner_as_admin": false,
  "auto_deploy": false,
  "users": [],
  "organizations": [],
  "target_type": "MANAGEMENTSERVER",
  "info_messages": [],
  "prompt_message": null,
  "system_version": "9.0.0 (1007160153)",
  "steps": [
    {
      "name": "Azure SnapShots Report",
      "type": "EMBEDDED_SCRIPT",
      "condition": "#{target.cloudAccount.type} -eq \"ms_arm\"",
      "data": {
        "credentials": null,
        "failure_action": "FAIL_STEP",
        "script_contents": "<#Azure Instance Snapshots X Days old \nRequires PS module AZ on the Commander server. \n*Commander 8.6.0 or higher \n*Advanced property \"embotics.workflow.script.credentials\" must be set to \"true\" \n#> \n \n$subscriptionId = (Get-Item Env:AZURE_SUBSCRIPTION_ID).value \n$tenantId = (Get-Item Env:AZURE_TENANT_ID).value \n$apiKey = (Get-Item Env:AZURE_API_KEY).value \n$ApplicationId = (Get-Item Env:AZURE_APPLICATION_ID).value \n$Account =  \"#{target.cloudAccount.address}\"  \n$AccountName = \"#{target.cloudAccount.name}\" \n$SnapshotAge = \"7\"  \n$module = \"AZ\" \n \nif(!($subscriptionId) -or !($tenantId) -or !($apiKey) -or !($ApplicationId)-or !($Module) -or !($AccountName)){ \n        Write-error \"Please provide Azure Login information\" \n        #Exit 1 \n        } \n\n#Report Details \n    $SanitzedAccount = \"XXXXXX\"+$subscriptionId.Substring(28) \n    $Path = \"C:\\progra~1\\Embotics\\vCommander\\tomcat\\reports\\data\\\" \n    $FileName = ($AccountName -replace \" \",\"_\")+\"-Snaphosts-\"+$SanitzedAccount+\".html\" \n    $reportpath = $path+$FileName \n    $CreationDate = get-date -Format f   \n \n#Remove white space for older versions of powershell \n    $subscriptionId = $subscriptionId -replace \"\\s\", \"\" \n    $tenantId = $tenantId -replace \"\\s\", \"\" \n    $apiKey = $apiKey -replace \"\\s\", \"\" \n    $applicationId = $applicationId -replace \"\\s\", \"\" \n    \n#Check for Module \n    if (Get-Module -ListAvailable -Name \"$module.*\") { \n        Import-Module $module \n        Write-Debug \"Module $module is installed.\" \n    } \n    else { \n        Write-Error \"Module $module does not appear to be installed, Please install and run again.\" \n        Exit 2 \n    } \n#Credential Object \n    [pscredential]$credential= New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"$applicationId\",(\"$apiKey\" | ConvertTo-SecureString -AsPlainText -Force) \n#Connect to Azure \n    $connect = Connect-AzAccount -Credential $credential -Subscription $subscriptionId -Tenant $tenantId -ServicePrincipal -Confirm:$false \n    if($connect){ \n        Write-Debug \"Connected to $($connect[0].Context.Environment.name)\" \n    } \n \n \n#Get Resource Group names \n    $ResourceGroups = (Get-AzResourceGroup).ResourceGroupName | Sort-Object \n \n#Setup Objects to populate \n    $Snapshotsobj = @() \n    $SnapshotsCount = 0 \n     \nForEach($RG in $ResourceGroups){ \nWrite-Debug $RG    \n \n#Get Snapshots older than (Default 30 days) \n$Snapshots = Get-AzSnapshot | Where-Object {$_.TimeCreated -lt (Get-Date).AddDays(\"-$Snapshotage\")} \n \nforeach ($SnapShot in $SnapShots){ \n    $SnapshotData = Get-AzSnapShot -Name $SnapShot.name -ResourceGroupName $SnapShot.resourcegroupname -WarningAction SilentlyContinue \n    $snapname = $snaprg = $snaptags = $snapTimeCreated = $null \n    $snapname = $SnapshotData.Name \n    $snaprg = $SnapshotData.ResourceGroupName \n    $snaptagsDict = $SnapshotData.Tags \n    $snapshotDiskSizeGB = $SnapshotData.DiskSizeGB \n    $SnapshotDiskCost = ((0.05 * 12) * $SnapshotData.DiskSizeGB) \n \n    #Convert hash to String \n    $nomorehash = $snaptagsDict.GetEnumerator() \n    $stringed = \"\" \n    foreach ($h in $nomorehash){ \n        $stringed = $stringed += $h \n    } \n    [string]$snaptags = [string]$stringed  \n     \n        $snapTimeCreated = $SnapshotData.TimeCreated \n        Write-Debug \"snapname - $snapname ,snaprg - $snaprg\" \n \n        $snapshotsCount += 1 \n        $snapshotsItemDetails = [PSCustomObject]@{     \n                Type = \"Snapshots\" \n                ResourceGroup = $snaprg \n                UNIdentifier = $snapname \n                Size = $snapshotDiskSizeGB \n                yCost = $SnapshotDiskCost \n                Date = $snapTimeCreated \n          } \n            $snapshotsobj += $snapshotsItemDetails \n    } \n} \n#EndForeach RG \n \n \n#Create Summary Objects \n    $SumObj = @() \n    $TotalCount = 0 \n    $TotalCost = 0 \n    $SnapCost = 0 \n     \n    #Unassigned vNics \n    if($snapshotsobj -ne $null) \n        { \n        $snapshotscount = $snapshotsobj.count \n        $snapshotsobj | ForEach-Object{ \n        $SnapCost += $_.ycost \n        } \n         \n             \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Snapshots\" \n                    Count = $snapshotscount \n                    yCost = \"{0:n2}\" -f $SnapCost \n                    } \n                $SumObj += $SummaryItemDetails \n        } \n        $TotalCost = \"{0:n2}\" -f ($SnapCost) \n        $TotalCount = $SnapshotsCount \n        $SummaryItemDetails = [PSCustomObject]@{     \n                    Type = \"Totals\" \n                    Count = $TotalCount \n                    yCost = $TotalCost \n                                        } \n                $SumObj += $SummaryItemDetails       \n \n#Create Table \n    $TableArrray = @($snapshotsobj) \n \n#Create Base File \n    New-Item -Path $ReportPath -Force -Confirm:$false | Out-Null  \n \n#Inject header to base file \nAdd-Content -Path $reportpath -Value (' \n<html xmlns:xi=\"http://www.w3.org/2001/XInclude\" xmlns:b=\"http://www.backbase.com/2006/btl\" xmlns:e=\"http://www.backbase.com/2006/xel\" xmlns:d=\"http://www.backbase.com/2006/tdl\" xmlns:c=\"http://www.backbase.com/2006/command\" xmlns:rep=\"http://www.embotics.com/vcommander/report\"> \n<head xmlns:bf=\"http://www.backbase.com/2007/forms\"> \n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"> \n<title>Report</title> \n<meta content=\"IE=Edge\" http-equiv=\"X-UA-Compatible\"> \n<script SRC=\"/reportlibs/fusioncharts3/fusioncharts.js\" type=\"text/javascript\"></script><script SRC=\"/reportlibs/fusioncharts3/fusioncharts.charts.js\" type=\"text/javascript\"></script><script SRC=\"/reportlibs/fusioncharts3/themes/fusioncharts.theme.fint.js\" type=\"text/javascript\"></script><script SRC=\"/reportlibs/lightbox.js\" type=\"text/javascript\"></script><script type=\"text/javascript\"> \n     function showhide(id){ \n        if (document.getElementById){ \n           obj = document.getElementById(id); \n           if (obj.style.display == \"none\"){ \n             obj.style.display = \"\"; \n           } else { \n             obj.style.display = \"none\"; \n           } \n         } \n       } \n        </script><script type=\"text/javascript\">    \n      function keydown(e) { \n          if(e.ctrlKey && e.keyCode==80) { // CTRL + P \n              e.preventDefault(); \n              e.stopPropagation(); \n              embPrint(); \n       } \n       } \n       function embPrint() { \n         window.print(); \n      } \n       document.onkeydown = keydown; \n        </script><script src=\"/Backbase/bb.js\" type=\"text/javascript\"></script><script type=\"text/javascript\"> \n        \n        function createEnlarge(contId, chartObj){ \n          var cont = document.getElementById(contId); \n          var icon = document.createElement(''i''); \n           icon.className=\"showLightbox fa fa-search-plus color-gray\"; \n              icon.style.marginTop = (cont.clientHeight - 24) + ''px''; \n              icon.onclick = function(){ \n      showLightboxForElement(icon, chartObj); \n     }; \n          cont.insertBefore(icon,cont.firstChild);  \n        } \n        </script> \n<link href=\"/css/default.css\" type=\"text/css\" rel=\"stylesheet\"> \n<link href=\"/css/skin.css\" type=\"text/css\" rel=\"stylesheet\"> \n<link href=\"/css/icons.css\" type=\"text/css\" rel=\"stylesheet\"> \n<link href=\"/css/fa/font-awesome.css\" type=\"text/css\" rel=\"stylesheet\"> \n</head> \n<body class=\"report_html billing\"> \n<style> \n</style> \n<xmp xmlns:bf=\"http://www.backbase.com/2007/forms\" class=\"printLandscape\" type=\"application/backbase+xml\" backbase=\"true\"> \n<xi:include href=\"/Backbase/skin.xml\"/> \n<div name=\"report_banner_logo\"></div> \n<div name=\"report_controls\"> \n<div id=\"report_logo\"></div> \n<b:button>Print \n                <e:handler type=\"text/javascript\" event=\"click\"> \n                    embPrint(); \n                </e:handler> \n</b:button> \n</div> \n<div name=\"report_banner_title\"> \n<h1>Azure Snapshots Report</h1> \n</div> \n<div name=\"report_banner_subtitle\"> \n<ul class=\"report_para\"> \n<table class=\"clear_border_report_table\"> \n \n') -Force -Confirm:$false \n \nAdd-Content -Path $reportpath -Value (\" \n<tr> \n<td><label>Creation Date:</label></td><td>$CreationDate</td> \n</tr> \n<tr> \n<td><label>Azure Account:</label></td><td>$SanitzedAccount</td> \n</tr> \n<tr> \n<td><label>Account Name:</label></td><td>$AccountName</td> \n</tr> \n<tr> \n<td><label>Snapshot Age:</label></td><td>$snapshotAge Days and older</td> \n</tr> \n</table> \n</ul> \n</div> \n<div> \n<p></p> \n</div> \n<br> \n</br>  \n<table id=\"\"table-1\"\"> \n<tr> \n<td> \n \n<div id=\"\"table1Div\"\"> \n<div class=\"\"tableData\"\"> \n<table class=\"\"table_data\"\"> \n<tr> \n<th>Savings Summary</th><th>Count</th><th>Yearly Cost($)</th> \n</tr> \n\") -Force -Confirm:$false \n \n#Add Summary Table Objects \n$SumObj | ForEach-Object { \nif($_.Type){[string]$sumtp = $_.Type} \n    Else{$sumtp =\"-\"} \nif($_.count){[int]$sumcount = $_.Count}\n    Else{$sumcount = \"-\"} \nif($_.ycost){[float]$sumcost = $_.ycost} \n    Else{$sumcost = \"-\"}    \n \n \nAdd-Content -Path $reportpath -Value (\" \n<tr> \n<td>$sumtp</td><td>$sumcount</td><td>$sumcost</td> \n</tr> \n\") -force -Confirm:$false \n} \n \nAdd-Content -Path $reportpath -Value (\" \n</table> \n</div> \n</div> \n \n<script type=\"\"text/javascript\"\"> \n</script></td> \n</tr> \n</table> \n<table width=\"\"100%\"\" id=\"\"table-2\"\"> \n<tr> \n<td> \n<p> \n<b>Item Summary</b> \n</p> \n<div class=\"\"chart_details\"\"> \n<table class=\"\"report_table\"\"> \n<tr> \n<th>Type</th><th class=\"\"rightAligned\"\">ResourceGroup</th><th class=\"\"rightAligned\"\">Identifier</th><th class=\"\"rightAligned\"\">Date</th><th class=\"\"rightAligned\"\">Size(GB)</th><th class=\"\"rightAligned\"\">Cost($)</th> \n</tr> \n\") -force -Confirm:$false \n \n#Add Summary Table Objects \n$SortedArray = $TableArrray | Sort-object -Property ResourceGroup ,Type \n$Sortedarray| ForEach-Object { \n    $linetp = $LineRegn = $lineid = $lineTag = $lineDate = $null \n    if($_.Type){[string]$linetp = $_.Type} \n    Else{$linetp =\"-\"} \nif($_.ResourceGroup){[string]$LineRegn = $_.ResourceGroup} \n    Else{$LineRegn =\"-\"} \nif($_.UNIdentifier){[string]$lineid = $_.UNIdentifier} \n    Else{$lineid =\"-\"} \nif($_.Date){$lineDate = $_.Date} \n    Else{$LineDate =\"-\"} \nif($_.Size){$linedisksize = $_.Size} \n    Else{$Linedisksize =\"-\"} \nif($_.yCost){$lineDiskCost = $_.yCost} \n    Else{$LineDiskCost =\"-\"} \n    Write-Debug \"Object-$Linetp $LineRegn $lineid  $lineDate $yCost $Size\" \n     \nAdd-Content -Path $reportpath -Value (\" \n<tr>   \n<td>$linetp</td><td class=\"\"rightAligned\"\">$LineRegn</td><td class=\"\"rightAligned\"\">$lineid</td><td class=\"\"rightAligned\"\">$lineDate</td><td class=\"\"rightAligned\"\">$linedisksize</td><td class=\"\"rightAligned\"\">$LineDiskCost</td> \n</tr> \n \n\") -force -Confirm:$false \n} \nAdd-Content -Path $reportpath -Value (\" \n<tr> \n<td colspan=\"\"1448\"\"><span class=\"\"recordDesc\"\"></span></td> \n</tr> \n<tr> \n<td class=\"\"blackLine\"\" colspan=\"\"3458\"\"></td> \n</tr> \n \n</table> \n</div> \n</td> \n</tr> \n \n</table> \n<div id=\"\"report_bottom\"\"></div> \n</xmp> \n</body> \n</html> \n\") -force -Confirm:$false \n \n \nWrite-Output \"AZUREPath#$FileName\"  \n   \n",
        "script_arguments": "",
        "timeout": 1800,
        "executable": "powershell.exe",
        "capture_output": true
      }
    },
    {
      "name": "Parse Output for report URL",
      "type": "EMBEDDED_SCRIPT",
      "condition": "#{target.cloudAccount.type} -eq \"ms_arm\"",
      "data": {
        "credentials": null,
        "failure_action": "FAIL_STEP",
        "script_contents": "$ReportName = \"#{steps['Azure SnapShots Report'].output}\"\n$CommanderAddress = \"#{system.address}\"\n$Report = $Reportname.Split('#')[1]\nWrite-Output \"https://$CommanderAddress/reports/$Report\" ",
        "script_arguments": "",
        "timeout": 300,
        "executable": "powershell.exe",
        "capture_output": true
      }
    },
    {
      "name": "Send Email",
      "type": "EMAIL",
      "condition": "#{target.cloudAccount.type} -eq \"ms_arm\"",
      "data": {
        "address_list": "youraddress@yourcomapny.com",
        "email_body": "The Report you requested is ready. \nreport address: #{steps['Parse Output for report URL'].output}",
        "email_subject": "Azure Old Snapshots Report Complete",
        "include_details": true
      }
    }
  ]
}