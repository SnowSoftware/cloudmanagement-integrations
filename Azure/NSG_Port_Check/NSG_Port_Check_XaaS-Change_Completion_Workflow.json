{
  "id": "",
  "guid": "",
  "name": "NSG Port Check (XaaS Example)",
  "type": "CHANGE_COMPLETION",
  "change_description": null,
  "fulfillment_rule": "NONE",
  "add_owner_as_admin": false,
  "auto_deploy": false,
  "users": [],
  "organizations": [],
  "target_type": null,
  "info_messages": [],
  "prompt_message": null,
  "system_version": "9.0.1 (1007160167)",
  "steps": [
    {
      "name": "Azure - Check NSG Port Availablility",
      "type": "EMBEDDED_SCRIPT",
      "condition": "#{target.cloudAccount.type} -eq \"ms_arm\"",
      "data": {
        "credentials": null,
        "failure_action": "FAIL_STEP",
        "script_contents": "<#\nAzure Generic Resource CR - Get Azure Security Group Policy (XaaS Example)\n*Commander 8.9.0 or higher\n*Advanced property \\\"embotics.workflow.script.credentials\\\" must be set to \\\"true\\\"\n\nRequires one form attribute (refer to the associated Change Request form for more info):\nPort\n\n#> \n\n# Target info\n$deployedName = \"#{target.deployedName}\"\n$resourceGroup = \"#{target.resourceGroup.name}\" \n$targetType = \"#{target.context.type}\"\n$supportedTargetType = \"Microsoft.Network/networkSecurityGroups\"\n\n# Input Field\n$PortNumber = \"#{target.settings.inputField['Port Number']}\"\n\n# Azure connection info\n$subscriptionId = (Get-Item Env:AZURE_SUBSCRIPTION_ID).value \n$tenantId = (Get-Item Env:AZURE_TENANT_ID).value \n$apiKey = (Get-Item Env:AZURE_API_KEY).value \n$ApplicationId = (Get-Item Env:AZURE_APPLICATION_ID).value\n\nif (!($subscriptionId) -or !($tenantId) -or !($apiKey) -or !($ApplicationId) -or !($PortNumber)) { \n    Write-Error \"Please provide Azure Login inforrmation\" \n    Exit 1\n}\nif ($targetType -ne $supportedTargetType) {\n    Write-Error \"This script only supports resources of type $($supportedTargetType). The type selected was $($targetType).\"\n    Exit 1\n}\n\n\n#Credential Object\n[pscredential]$credential= New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList \"$applicationId\",(\"$apiKey\" | ConvertTo-SecureString -AsPlainText -Force) \n\n#Connect to Azure\n$connect = Connect-AzAccount -Credential $credential -Subscription $subscriptionId -Tenant $tenantId -ServicePrincipal -Confirm:$false -WarningAction Ignore\nif($connect){\n    Write-Debug \"Connected to $($connect[0].Context.Environment.name)\"\n}\n\n\n# Get the NSG Details\n$SecurityRulesArray = @()\n$NSGDetails = Get-AzNetworkSecurityGroup -Name  $deployedName -ResourceGroupName $resourceGroup \n$NSGSecurityRules = $NSGDetails | select-object SecurityRules -ExpandProperty SecurityRules\n\n# Loop through each rule looking for the specific port\nforeach($NSGSecurityRule in $NSGSecurityRules)\n    {\n        if(($NSGSecurityRule.DestinationPortRange -like \"*-*\") -or ($NSGSecurityRule.DestinationPortRange -like \"*,*\"))\n            {\n                if($NSGSecurityRule.destinationPortRange -like \"*-*\")\n                    {\n                        [string]$NSGPortRanges = $NSGSecurityRule.destinationPortRange\n                        $NSGPortRangesArray = $NSGPortRanges.split(\" \")\n                            foreach($NSGPortRangeArrayItem in $NSGPortRangesarray)\n                                {                                \n                                    if($NSGPortRangeArrayItem -like \"*-*\")\n                                        {\n                                            write-host \"Checking Destination Port Range [$NSGPortRangeArrayItem]\" \n                                            $PortRangeSplitPosition = $NSGPortRangeArrayItem.IndexOf(\"-\")\n                                            [int32]$StartPortRange = $NSGPortRangeArrayItem.SubString(0, $PortRangeSplitPosition)\n                                            [int32]$EndPortRange = $NSGPortRangeArrayItem.SubString($PortRangeSplitPosition+1)\n                                            [int32]$LoopNumber = $StartPortRange\n                                            \n                                           \n                                            if (($LoopNumber -le $EndPortRange) -and ($LoopNumber -ge $StartPortRange))\n                                                {\n                                                    do\n                                                        {\n                                                        \n                                                        if($LoopNumber -eq $PortNumber)\n                                                            {\n                                                            write-host \"[$PortNumber] located in your Destination Port Range [$NSGPortRangeArrayItem]\"\n                                                            $ruleinformation = [ordered]@{\n                                                            'Name' = $NSGSecurityRule.Name\n                                                            'Direction' = $NSGSecurityRule.Direction\n                                                            'Priority' = $NSGSecurityRule.Priority\n                                                            'SourcePortRange' = $NSGSecurityRule.SourcePortRange\n                                                            'DestinationPortRange' = $NSGSecurityRule.DestinationPortRange\n                                                            'Protocol' = $NSGSecurityRule.Protocol\n                                                            'SourceAddressPerfix' = $NSGSecurityRule.SourceAddressPrefix\n                                                            'DestinationAddressPrefix' = $NSGSecurityRule.DestinationAddressPrefix\n                                                            'Access' = $NSGSecurityRule.Access\n                                                            '----------' = \"----------\"\n                                                            } \n                                                        $SecurityRulesArray += $ruleinformation\n                                                        \n                                                        \n                                                            }\n                                                            $LoopNumber++\n                                                        }\n                                            while ($LoopNumber -le $EndPortRange)\n                                                }\n                                        }\n                                        elseif($NSGSecurityRule.DestinationPortRange -like \"*-*\")\n                                        {\n                                            [string]$NSGPortRanges = $NSGSecurityRule.DestinationPortRange\n                                            $NSGPortRangesArray = $NSGPortRanges.split(\" \")\n                                                foreach($NSGPortRangeArrayItem in $NSGPortRangesarray)\n                                                    {\n                                                                                        \n                                                        if($NSGPortRangeArrayItem -notlike \"*-*\")\n                                                            {\n                                                                write-host \"Checking comma separated items in your range [$NSGPortRangeArrayItem]\" \n                                                                if ($NSGPortRangeArrayItem -eq $PortNumber)\n                                                                    {\n                                                                                write-host \"Located port [$PortNumber] as part of your range\" \n                                                                                $ruleinformation = [ordered]@{\n                                                                                'Name' = $NSGSecurityRule.Name\n                                                                                'Direction' = $NSGSecurityRule.Direction\n                                                                                'Priority' = $NSGSecurityRule.Priority\n                                                                                'SourcePortRange' = $NSGSecurityRule.SourcePortRange\n                                                                                'DestinationPortRange' = $NSGSecurityRule.DestinationPortRange\n                                                                                'Protocol' = $NSGSecurityRule.Protocol\n                                                                                'SourceAddressPerfix' = $NSGSecurityRule.SourceAddressPrefix\n                                                                                'DestinationAddressPrefix' = $NSGSecurityRule.DestinationAddressPrefix\n                                                                                'Access' = $NSGSecurityRule.Access\n                                                                                '----------' = \"----------\"\n                                                                                } \n                                                                            $SecurityRulesArray += $ruleinformation\n                                                                    }\n                                                                               \n                                                            }\n                                                    }\n                                        }\n                                }\n                    }\n            }\n            elseif(($NSGSecurityRule.SourcePortRange -like \"*-*\") -or ($NSGSecurityRule.SourcePortRange -like \"*,*\"))\n            {\n                if($NSGSecurityRule.SourcePortRange -like \"*-*\")\n                    {\n                        [string]$NSGPortRanges = $NSGSecurityRule.SourcePortRange\n                        $NSGPortRangesArray = $NSGPortRanges.split(\" \")\n                            foreach($NSGPortRangeArrayItem in $NSGPortRangesarray)\n                                {\n                                     write-host \"Checking Source Port Range $NSGPortRangeArrayItem\"                                 \n                                    if($NSGPortRangeArrayItem -like \"*-*\")\n                                        {\n                                            $PortRangeSplitPosition = $NSGPortRangeArrayItem.IndexOf(\"-\")\n                                            [int32]$StartPortRange = $NSGPortRangeArrayItem.SubString(0, $PortRangeSplitPosition)\n                                            [int32]$EndPortRange = $NSGPortRangeArrayItem.SubString($PortRangeSplitPosition+1)\n                                            [int32]$LoopNumber = $StartPortRange\n                                                                                       \n                                            if ($LoopNumber -ne $PortNumber)\n                                                {\n                                                    do\n                                                        {\n                                                        if($LoopNumber -eq $PortNumber)\n                                                            {\n                                                            write-host \"[$PortNumber] located in your Destination Port Range [$NSGPortRangeArrayItem]\" \n                                                            $ruleinformation = [ordered]@{\n                                                            'Name' = $NSGSecurityRule.Name\n                                                            'Direction' = $NSGSecurityRule.Direction\n                                                            'Priority' = $NSGSecurityRule.Priority\n                                                            'SourcePortRange' = $NSGSecurityRule.SourcePortRange\n                                                            'DestinationPortRange' = $NSGSecurityRule.DestinationPortRange\n                                                            'Protocol' = $NSGSecurityRule.Protocol\n                                                            'SourceAddressPerfix' = $NSGSecurityRule.SourceAddressPrefix\n                                                            'DestinationAddressPrefix' = $NSGSecurityRule.DestinationAddressPrefix\n                                                            'Access' = $NSGSecurityRule.Access\n                                                            '----------' = \"----------\"\n                                                            } \n                                                        $SecurityRulesArray += $ruleinformation\n                                                        \n                                                            }\n                                                            $LoopNumber++\n                                                        }\n                                            while ($LoopNumber -le $EndPortRange)\n                                                }\n                                        }\n                                        elseif($NSGSecurityRule.SourcePortRange -like \"*-*\")\n                                        {\n                                            [string]$NSGPortRanges = $NSGSecurityRule.SourcePortRange\n                                            $NSGPortRangesArray = $NSGPortRanges.split(\" \")\n                                                foreach($NSGPortRangeArrayItem in $NSGPortRangesarray)\n                                                    {\n                                                         write-host \"Checking Source Port range $NSGPortRangeArrayItem\"                                 \n                                                        if($NSGPortRangeArrayItem -notlike \"*-*\")\n                                                            {\n                                                                                                                                                       \n                                                                if ($NSGPortRangeArrayItem -eq $PortNumber)\n                                                                    {\n                                                                                write-host \"[$PortNumber] located in your Destination Port Range [$NSGPortRangeArrayItem]\" \n                                                                                $ruleinformation = [ordered]@{\n                                                                                'Name' = $NSGSecurityRule.Name\n                                                                                'Direction' = $NSGSecurityRule.Direction\n                                                                                'Priority' = $NSGSecurityRule.Priority\n                                                                                'SourcePortRange' = $NSGSecurityRule.SourcePortRange\n                                                                                'DestinationPortRange' = $NSGSecurityRule.DestinationPortRange\n                                                                                'Protocol' = $NSGSecurityRule.Protocol\n                                                                                'SourceAddressPerfix' = $NSGSecurityRule.SourceAddressPrefix\n                                                                                'DestinationAddressPrefix' = $NSGSecurityRule.DestinationAddressPrefix\n                                                                                'Access' = $NSGSecurityRule.Access\n                                                                                '----------' = \"----------\"\n                                                                                } \n                                                                            $SecurityRulesArray += $ruleinformation\n                                                                    }\n                                                                               \n                                                            }\n                                                    }\n                                        }\n                                }\n                    }\n            }\n            elseif($NSGSecurityRule.SourcePortRange -eq $PortNumber)\n            {\n                write-host \"Individual port located in Source Range [$NSGSecurityRule.SourcePortRange]\" \n                $ruleinformation = [ordered]@{\n                'Name' = $NSGSecurityRule.Name\n                'Direction' = $NSGSecurityRule.Direction\n                'Priority' = $NSGSecurityRule.Priority\n                'SourcePortRange' = $NSGSecurityRule.SourcePortRange\n                'DestinationPortRange' = $NSGSecurityRule.DestinationPortRange\n                'Protocol' = $NSGSecurityRule.Protocol\n                'SourceAddressPerfix' = $NSGSecurityRule.SourceAddressPrefix\n                'DestinationAddressPrefix' = $NSGSecurityRule.DestinationAddressPrefix\n                'Access' = $NSGSecurityRule.Access\n                '----------' = \"----------\"\n                                        } \n                $SecurityRulesArray += $ruleinformation\n            }\n            elseif($NSGSecurityRule.DestinationPortRange -eq $PortNumber)\n            {\n                write-host \"Individual port located in Source Range [$NSGSecurityRule.DestinationPortRange]\" \n                $ruleinformation = [ordered]@{\n                'Name' = $NSGSecurityRule.Name\n                'Direction' = $NSGSecurityRule.Direction\n                'Priority' = $NSGSecurityRule.Priority\n                'SourcePortRange' = $NSGSecurityRule.SourcePortRange\n                'DestinationPortRange' = $NSGSecurityRule.DestinationPortRange\n                'Protocol' = $NSGSecurityRule.Protocol\n                'SourceAddressPerfix' = $NSGSecurityRule.SourceAddressPrefix\n                'DestinationAddressPrefix' = $NSGSecurityRule.DestinationAddressPrefix\n                'Access' = $NSGSecurityRule.Access\n                '----------' = \"----------\"\n                                        } \n                $SecurityRulesArray += $ruleinformation\n            }\n            \n    }                    \n    \n    if($SecurityRulesArray)\n    {\n        $SecurityRulesArray\n    }\nElse\n    {\n        write-host \"There are no rules that have your selected port [$PortNumber] in either source or destination port ranges inbound or outbound\"   \n    }",
        "script_arguments": "",
        "timeout": 300,
        "executable": "powershell.exe",
        "capture_output": true
      }
    },
    {
      "name": "Send Email",
      "type": "EMAIL",
      "condition": null,
      "data": {
        "address_list": "#{request.requester.email}",
        "email_body": "The following was captured from the NSG check for port #{target.settings.inputField['Port Number']}\n\n--------------------------------------------------------------------------------\n\n#{steps[1].output}\n\n--------------------------------------------------------------------------------",
        "email_subject": "Change request notification - Security Group Port Check",
        "include_details": true
      }
    }
  ]
}