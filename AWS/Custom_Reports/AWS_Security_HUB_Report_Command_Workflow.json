{
  "id": "",
  "guid": "",
  "name": "AWS - Security HUB Report",
  "type": "COMMAND",
  "change_description": null,
  "fulfillment_rule": "NONE",
  "add_owner_as_admin": false,
  "auto_deploy": false,
  "users": [],
  "organizations": [],
  "target_type": "MANAGEMENTSERVER",
  "info_messages": [],
  "prompt_message": null,
  "system_version": "9.0.0 (1007160158)",
  "steps": [
    {
      "name": "Run AWS Security HUB Report Capture",
      "type": "EMBEDDED_SCRIPT",
      "condition": "#{target.cloudAccount.type} -eq \"amazon_aws\"",
      "data": {
        "credentials": null,
        "failure_action": "FAIL_STEP",
        "script_contents": "<#\nAWS Security Hub findings report\nYou will need to enable security hub for your AWS Subscription and link the regions and/or other accounts as required.\n\nPlease see the Enable Security HUB powershell scripts and workflows available in our GIT Repo for assistance.\n\nRequires AWS module - \"AWSPowershell.netcore\" and \n#>\n\n$AccessKey = (Get-Item Env:AWS_ACCESS_KEY_ID).value\n$SecretKey = (Get-Item Env:AWS_SECRET_ACCESS_KEY).value\n$AccountName = \"#{target.cloudAccount.name}\"\n$Account = \"#{target.remoteId}\"\n\nif(!($Accesskey) -or !($SecretKey) -or !($AccountName) -or !($Account)){\n        Write-error \"Please provide AWS Login information\"\n        Exit 1\n        } \n\n#Remove white space for older versions of powershell\n$Accesskey = $Accesskey -replace \"\\s\", \"\"\n$SecretKey = $SecretKey -replace \"\\s\", \"\"\n\n#Check for Module\n$Module = \"AWSPowerShell.NetCore\"\nif (Get-Module -ListAvailable -Name $Module) {\n    Import-Module AWSPowershell.netcore\n    Write-Debug \"Module $Module is installed.\"\n} \nelse {\n    Write-Error \"Module $module does not appear to be installed, Please install and run again.\"\n    Exit 1\n}\n\n# Login\nSet-AWSCredentials -AccessKey $AccessKey -SecretKey $SecretKey -StoreAs SnowCommander\n$Connect = Initialize-AWSDefaults -ProfileName SnowCommander\n$SanitzedAccount = \"XXXXXX\"+ $Account.Substring(6)\n\n# Variables\n$Path = \"C:\\progra~1\\Embotics\\vCommander\\tomcat\\reports\\data\\\"\n$FileName = ($AccountName -replace \" \",\"_\")+\"-HUB-\"+$SanitzedAccount+\".html\"\n$reportpath = $path+$FileName\n\n$CreationDate = get-date -Format f \n\n\n# Get Security Hub Findings and group by region  \n  $SHUBFindingList = get-shubfinding\n  $SHUBFindingGroupByRegion = $SHUBFindingList | group-object -Property Region\n\n\n#Setup Objects to populate\n    $SHUBobj = @()\n    $TableObj = @()\n\nForEach($Name in $SHUBFindingGroupByRegion){\n\n#Security HUB Report\n\n    Foreach($SHUBEvent in $Name.group){\n        $SHUBTitle = $SHUBEvent.Title\n        $SHUBComplianceStatus = $SHUBEvent.Compliance.status.value\n        $SHUBComplianceReason = $SHUBEvent.Description\n        $SHUBRemediationText = $SHUBEvent.Remediation.recommendation.text\n        $SHUBRemediationURL = $SHUBEvent.Remediation.recommendation.URL\n        $SHUBRegion = $SHUBEvent.Region\n        $SHUBSeverity = $SHUBEvent.severity.Label.Value\n        $SHUBAccountID = $SHUBEvent.AWSAccountID\n        \n\n# Write out items to table   \n                    $SHUBItemDetails = [PSCustomObject]@{    \n                    AccountID = $SHUBAccountID\n                    Title = $SHUBTitle\n                    Severity = $SHUBSeverity\n                    Status = $SHUBComplianceStatus\n                    Reason = $SHUBComplianceReason\n                    Remediation = $SHUBRemediationText\n                    RemediationURL = $SHUBRemediationURL\n                    Region = $SHUBRegion\n                    }\n                $SHUBobj += $SHUBItemDetails\n                }\n    }\n\n\n#Create Summary Objects\n    $SumObj = @()\n    $SHUBObjGroup = @()\n    $TotalCount = 0\n    if($SHUBobj)\n        {\n        \n        Foreach($Result in $SHUBFindingGroupByRegion)\n        {\n        \n        $ShubobjCount = $Result.Count\n        $SHUBObjRegion = $Result.Name\n        \n            \n        $SummaryItemDetails = [PSCustomObject]@{    \n                    Region = $SHUBObjRegion\n                    Count = $SHUBobjCount\n                    }\n                    write-host \"$SHUBObjRegion | $SHUBobjCount\"\n                    \n                $SumObj += $SummaryItemDetails\n                }\n    }\n             \n          \n\n#Create Table\n    $TableArrray = @($SHUBObj)\n\n#Create Base File\nnew-item -Path $ReportPath -Force -Confirm:$false | Out-Null \n\n#Inject header to base file\nadd-Content -Path $reportpath -Value ('\n<html xmlns:xi=\"http://www.w3.org/2001/XInclude\" xmlns:b=\"http://www.backbase.com/2006/btl\" xmlns:e=\"http://www.backbase.com/2006/xel\" xmlns:d=\"http://www.backbase.com/2006/tdl\" xmlns:c=\"http://www.backbase.com/2006/command\" xmlns:rep=\"http://www.embotics.com/vcommander/report\">\n<head xmlns:bf=\"http://www.backbase.com/2007/forms\">\n<META http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>AWS Security HUB Report</title>\n<meta content=\"IE=Edge\" http-equiv=\"X-UA-Compatible\">\n<script SRC=\"/reportlibs/fusioncharts3/fusioncharts.js\" type=\"text/javascript\"></script><script SRC=\"/reportlibs/fusioncharts3/fusioncharts.charts.js\" type=\"text/javascript\"></script><script SRC=\"/reportlibs/fusioncharts3/themes/fusioncharts.theme.fint.js\" type=\"text/javascript\"></script><script SRC=\"/reportlibs/lightbox.js\" type=\"text/javascript\"></script><script type=\"text/javascript\">\n     function showhide(id){\n        if (document.getElementById){\n           obj = document.getElementById(id);\n           if (obj.style.display == \"none\"){\n             obj.style.display = \"\";\n           } else {\n             obj.style.display = \"none\";\n           }\n         }\n       }\n        </script><script type=\"text/javascript\">   \n      function keydown(e) {\n          if(e.ctrlKey && e.keyCode==80) { // CTRL + P\n              e.preventDefault();\n              e.stopPropagation();\n              embPrint();\n       }\n       }\n       function embPrint() {\n         window.print();\n      }\n       document.onkeydown = keydown;\n        </script><script src=\"/Backbase/bb.js\" type=\"text/javascript\"></script><script type=\"text/javascript\">\n       \n        function createEnlarge(contId, chartObj){\n          var cont = document.getElementById(contId);\n          var icon = document.createElement(''i'');\n           icon.className=\"showLightbox fa fa-search-plus color-gray\";\n              icon.style.marginTop = (cont.clientHeight - 24) + ''px'';\n              icon.onclick = function(){\n      showLightboxForElement(icon, chartObj);\n     };\n          cont.insertBefore(icon,cont.firstChild); \n        }\n        </script>\n<link href=\"/css/default.css\" type=\"text/css\" rel=\"stylesheet\">\n<link href=\"/css/skin.css\" type=\"text/css\" rel=\"stylesheet\">\n<link href=\"/css/icons.css\" type=\"text/css\" rel=\"stylesheet\">\n<link href=\"/css/fa/font-awesome.css\" type=\"text/css\" rel=\"stylesheet\">\n</head>\n<body class=\"report_html billing\">\n<style>\n</style>\n<xmp xmlns:bf=\"http://www.backbase.com/2007/forms\" class=\"printLandscape\" type=\"application/backbase+xml\" backbase=\"true\">\n<xi:include href=\"/Backbase/skin.xml\"/>\n<div name=\"report_banner_logo\"></div>\n<div name=\"report_controls\">\n<div id=\"report_logo\"></div>\n<b:button>Print\n                <e:handler type=\"text/javascript\" event=\"click\">\n                    embPrint();\n                </e:handler>\n</b:button>\n</div>\n<div name=\"report_banner_title\">\n<h1>AWS Security HUB Report</h1>\n</div>\n<div name=\"report_banner_subtitle\">\n<ul class=\"report_para\">\n<table class=\"clear_border_report_table\">\n\n') \nadd-Content -Path $reportpath -Value (\"\n<tr>\n<td><label>Creation Date:</label></td><td>$CreationDate</td>\n</tr>\n<tr>\n<td><label>AWS Account:</label></td><td>$SanitzedAccount</td>\n</tr>\n<tr>\n<td><label>Account Name:</label></td><td>$AccountName</td>\n</tr>\n</table>\n</ul>\n</div>\n<div>\n<p></p>\n</div>\n<br>\n</br> \n<table id=\"\"table-1\"\">\n<tr>\n<td>\n\n<div id=\"\"table1Div\"\">\n<div class=\"\"tableData\"\">\n<table class=\"\"table_data\"\">\n<tr>\n<th>Region</th><th>Count</th>\n</tr>\n\") -Force -Confirm:$false\n#Add Summary Table Objects\n$SumObj | ForEach-Object {\nif($_.Region){[string]$Repregion = $_.Region}\n    Else{$Repregion =\"-\"}\nif($_.count){[int]$sumcount = $_.Count}\n    Else{$sumcount = \"-\"}\n\n\nAdd-Content -Path $reportpath -Value (\"\n<tr>\n<td>$Repregion</td><td>$sumcount</td>\n</tr>\n\") -force -Confirm:$false\n}\n\nAdd-Content -Path $reportpath -Value (\"\n</table>\n</div>\n</div>\n\n<script type=\"\"text/javascript\"\">\n</script></td>\n</tr>\n</table>\n<table width=\"\"100%\"\" id=\"\"table-2\"\">\n<tr>\n<td>\n<p>\n<b>Security HUB Summary</b>\n</p>\n<div class=\"\"chart_details\"\">\n<table class=\"\"report_table\"\">\n<tr>\n<th>Title</th><th class=\"\"rightAligned\"\">Severity</th><th class=\"\"rightAligned\"\">Status</th><th class=\"\"rightAligned\"\">Reason</th><th class=\"\"rightAligned\"\">Remediation</th><th class=\"\"rightAligned\"\">Remediation URL</th><th class=\"\"rightAligned\"\">Account ID</th><th class=\"\"rightAligned\"\">Region</th>\n</tr>\n\") -force -Confirm:$false\n\n#Add Summary Table Objects\n$SortedArray = $TableArrray | Sort-object -Property AccountID, Region ,Severity\n$Sortedarray| ForEach-Object {\n    $lineaccountid = $linetitle = $Lineseverity = $lineregion = $lineStatus = $lineReason = $lineRemediation = $lineURL = $null\nif($_.AccountID){[string]$lineAccountID = $_.AccountID}\n    Else{$lineAccountID =\"-\"}\nif($_.Title){[string]$linetitle = $_.Title}\n    Else{$linetitle =\"-\"}\nif($_.Severity){[string]$LineSeverity = $_.Severity}\n    Else{$LineSeverity =\"-\"}\nif($_.Status){[string]$linestatus = $_.Status}\n    Else{$linestats =\"-\"}\nif($_.Reason){$linereason = $_.Reason}\n    Else{$LineReason =\"-\"}\nif($_.Remediation){$lineRemediation = $_.Remediation}\n    Else{$LineRemediation =\"-\"}\nif($_.RemediationURL){$lineURL = $_.RemediationURL} #Modified to show html\n    Else{$LineURL =\"-\"}\nif($_.Region){$lineregion = $_.Region}\n    Else{$LineRegion =\"-\"}\n    Write-Debug \"Object - $lineaccountid $linetitle $Lineseverity $lineregion $lineStatus $lineReason $lineRemediation $lineURL\"\n    \nAdd-Content -Path $reportpath -Value (\"\n<tr>  \n<td>$linetitle</td><td class=\"\"rightAligned\"\">$Lineseverity</td><td class=\"\"rightAligned\"\">$lineStatus</td><td class=\"\"rightAligned\"\">$lineReason</td><td class=\"\"rightAligned\"\">$lineRemediation</td><td class=\"\"rightAligned\"\">$lineURL</td><td class=\"\"rightAligned\"\">$lineaccountid</td><td class=\"\"rightAligned\"\">$lineregion</td>\n</tr>\n\n\") -force -Confirm:$false\n}\n\nAdd-Content -Path $reportpath -Value (\"\n<tr>\n<td colspan=\"\"1448\"\"><span class=\"\"recordDesc\"\"></span></td>\n</tr>\n<tr>\n<td class=\"\"blackLine\"\" colspan=\"\"3458\"\"></td>\n</tr>\n\n</table>\n</div>\n</td>\n</tr>\n\n</table>\n<div id=\"\"report_bottom\"\"></div>\n</xmp>\n</body>\n</html>\n\") -force -Confirm:$false\n\n\nWrite-Output \"AWSRPath#$FileName\" \n",
        "script_arguments": "",
        "timeout": 600,
        "executable": "powershell.exe",
        "capture_output": true
      }
    },
    {
      "name": "Parse Output for report URL",
      "type": "EMBEDDED_SCRIPT",
      "condition": "#{target.cloudAccount.type} -eq \"amazon_aws\"",
      "data": {
        "credentials": null,
        "failure_action": "FAIL_STEP",
        "script_contents": "$ReportName = \"#{steps[1].output}\"\n$CommanderAddress = \"#{system.address}\"\n$Report = $Reportname.Split('#')[1]\nWrite-Output \"https://$CommanderAddress/reports/$Report\" \n\n",
        "script_arguments": "",
        "timeout": 300,
        "executable": "powershell.exe",
        "capture_output": true
      }
    },
    {
      "name": "Send Email",
      "type": "EMAIL",
      "condition": "#{target.cloudAccount.type} -eq \"amazon_aws\"",
      "data": {
        "address_list": "user@company.com",
        "email_body": "The AWS Security HUB Report you requested is ready. \nReport Address: #{steps[2].output}\n",
        "email_subject": "AWS Security HUB Report Complete",
        "include_details": true
      }
    }
  ]
}